{"version":3,"sources":["components/StoryCard.js","pages/Bookshelf.js","components/Post.js","components/FacebookLoginButton.js","pages/Story.js","App.js","index.js"],"names":["StoryCard","props","to","id","className","title","author","src","imageURL","content","length","Bookshelf","useState","stories","setStories","a","requestOptions","method","mode","headers","fetch","response","json","storiesData","status","data","useEffect","getData","map","story","image_url","createdAt","Post","active","setActive","selected","setSelected","postTimestamps","split","postDate","Date","UTC","formattedPostDate","getMonth","getDate","getFullYear","indexOf","onMouseEnter","onMouseLeave","onClick","liked","likePost","d","likes","text","toLocaleTimeString","FacebookLoginButton","appId","autoLoad","fields","console","log","callback","login","username","name","picture","url","userId","userID","Story","storyId","useParams","errorMsg","setErrorMsg","postInput","useRef","storiesResponse","loggedIn","postLike","user","body","JSON","stringify","likedPosts","hasOwnProperty","userLikePost","e","preventDefault","post","story_id","parseInt","current","value","dislikes","created_at","ref","placeholder","App","setLoggedIn","setUser","postLikesResponse","postLikesData","post_likes","forEach","post_id","oldUser","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9a8f0442.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction StoryCard(props) {\r\n  return (\r\n    <Link to={\"/story/\" + props.id}>\r\n      <div className=\"story-card\">\r\n        <header>\r\n          <h3><i>{props.title}</i></h3>\r\n          <h5>by {props.author}</h5>\r\n        </header>\r\n        <img src={props.imageURL} />\r\n        <footer>Posts: {props.content != null ? props.content.length : 0}</footer>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default StoryCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport StoryCard from '../components/StoryCard';\r\n\r\nfunction Bookshelf() {\r\n  const [stories, setStories] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  async function getData() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    const response = await fetch(\"/api/get-stories\", requestOptions);\r\n    const storiesData =  await response.json();\r\n\r\n    if (storiesData.status == \"OK\") {\r\n      setStories([...stories, ...storiesData.data.stories]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <article>\r\n      <header>\r\n        <h1>Public Stories</h1>\r\n        <h3>Click on a story to view and edit it!</h3>\r\n      </header>\r\n\r\n      <div className=\"content\">\r\n        <div className=\"stories-container\">\r\n          {stories.map((story => \r\n            <StoryCard key={story.id} id={story.id} author={story.author} title={story.title} imageURL={story.image_url} content={story.content} createdAt={story.createdAt} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Bookshelf;\r\n","import { useState } from 'react';\r\n\r\nfunction Post(props) {\r\n  const [active, setActive] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const postTimestamps = props.createdAt.split(/[-TZ:]/);\r\n  const postDate = new Date(Date.UTC(postTimestamps[0], postTimestamps[1], postTimestamps[2], postTimestamps[3], postTimestamps[4], postTimestamps[5]));\r\n  const formattedPostDate = `${(postDate.getMonth())}/${+ postDate.getDate()}/${postDate.getFullYear()}`;\r\n\r\n  let author = props.author;\r\n  if (author.indexOf(\":\") > -1) {\r\n    author = author.split(\":\")[0];\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post-content\" onMouseEnter={() => setActive(true)} onMouseLeave={() => setActive(false)} onClick={() => setSelected(!selected)}>\r\n        <span className=\"heart-container\">\r\n          <svg className={props.liked ? \"heart-button active\" : \"heart-button\"} onClick={() => props.likePost(props.id)}><path d = \"M17.027 2.21c-2.248 0-4.166 1.786-5.027 3.704C11.139 3.995 9.222 2.21 6.973 2.21 3.931 2.21 1.416 4.725 1.416 7.766c0 6.218 6.283 7.872 10.584 14.024 4.035-6.152 10.584-8.005 10.584-14.024C22.584 4.725 20.072 2.21 17.027 2.21z\" /></svg>\r\n          {props.likes}\r\n        </span>\r\n        <span className={active || selected ? \"post-text active\" : \"post-text\"}>{props.text}</span>\r\n      </div>\r\n      <div className={active || selected ? \"post-info active\" : \"post-info\"}>\r\n        <div>Written by {author} on {formattedPostDate + \" - \" + postDate.toLocaleTimeString()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import FacebookLoginBtn from 'react-facebook-login';\r\n\r\nfunction FacebookLoginButton(props) {\r\n  function buttonClicked() {\r\n    console.log(\"Facebook button clicked.\", props)\r\n  }\r\n\r\n\tfunction login(response) {\r\n\t\tif (response.status != \"unknown\") {\r\n      props.login({ \r\n        username: response.name, \r\n        picture: response.picture.data.url, \r\n        userId: response.userID,\r\n      });\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FacebookLoginBtn appId = \"850650752207328\" autoLoad = {false} fields = \"name,picture\" onClick = {buttonClicked} callback = {login} />\r\n  );\r\n}\r\n\r\nexport default FacebookLoginButton;","import { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Post from '../components/Post';\r\nimport FacebookLoginButton from '../components/FacebookLoginButton';\r\n\r\nfunction Story(props) {\r\n  const storyId = useParams().id;\r\n  const [stories, setStories] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const postInput = useRef();\r\n  \r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  async function getData() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    const storiesResponse = await fetch(\"/api/get-story?id=\" + storyId, requestOptions);\r\n    const storiesData =  await storiesResponse.json();\r\n\r\n    if (storiesData.status == \"OK\") {\r\n      setStories([...storiesData.data.stories]);\r\n    }\r\n  }\r\n\r\n  async function likePost(id) {\r\n    if (props.loggedIn) {\r\n      const postLike = {\r\n        id: id,\r\n        author: props.user.username + \":\" + props.user.userId,\r\n      };\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(postLike),\r\n      };\r\n\r\n      const response = await fetch(props.user.likedPosts.hasOwnProperty(id) ? \"api/unlike-post\" : \"/api/like-post\", requestOptions);\r\n      const storiesData =  await response.json();\r\n\r\n      if (storiesData.status == \"OK\") {\r\n        getData();\r\n        props.login(props.user);\r\n        props.userLikePost(id);\r\n      } else {\r\n        setErrorMsg(storiesData.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function submitPost(e) {\r\n    e.preventDefault();\r\n\r\n    const post = {\r\n      story_id: parseInt(storyId),\r\n      author: props.user.username + \":\" + props.user.userId,\r\n      text: postInput.current.value,\r\n    };\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(post),\r\n    };\r\n\r\n    const response = await fetch(\"/api/create-post\", requestOptions);\r\n    const storiesData =  await response.json();\r\n\r\n    if (storiesData.status == \"OK\") {\r\n      getData();\r\n      postInput.current.value = \"\";\r\n      setErrorMsg(\"\");\r\n    } else {\r\n      setErrorMsg(storiesData.data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <article className=\"story\">\r\n      {stories.map((story => \r\n        <div key={story.id}>\r\n          <header>\r\n            <h1><i>{story.title}</i></h1>\r\n            <h3>by {story.author}</h3>\r\n          </header>\r\n\r\n          <div className=\"content\">\r\n            {story.content != null ? story.content.map((post => \r\n              <Post key={post.id} id={post.id} author={post.author} text={post.text} likes={post.likes} dislikes={post.dislikes} createdAt={post.created_at} liked={props.user.hasOwnProperty(\"likedPosts\") && props.user.likedPosts.hasOwnProperty(post.id)} likePost={likePost} />\r\n            )) : \"\"}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"post-section\">\r\n        {props.loggedIn ? \r\n          <form>\r\n            <span className=\"error-message\">{errorMsg}</span>\r\n            <textarea ref={postInput} placeholder={`Hi ${props.user.username}! Contribute to the story here!`}></textarea>\r\n            <button onClick={submitPost}>SUBMIT</button>\r\n          </form>\r\n          :\r\n          <div className=\"login-section\">\r\n            <h2>Want to contribute to the story?</h2>\r\n            <FacebookLoginButton login={props.login} />\r\n          </div>\r\n        }\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Story;","import { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport Bookshelf from './pages/Bookshelf';\nimport Story from './pages/Story';\n\nimport './styles/App.css';\nimport './styles/bookshelf.css';\nimport './styles/story.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  async function login(user) {\n    if (user.hasOwnProperty(\"userId\") && user.hasOwnProperty(\"username\")) {\n      console.log(user)\n      setLoggedIn(true);\n      user.likedPosts = {};\n\n      const requestOptions = {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" }\n      };\n\n      const postLikesResponse = await fetch(\"/api/get-author-post-likes?author=\" + user.username + \":\" + user.userId, requestOptions);\n      const postLikesData =  await postLikesResponse.json();\n  \n      if (postLikesData.status == \"OK\" && postLikesData.data.post_likes != null) {\n        postLikesData.data.post_likes.forEach(post => {\n          user.likedPosts[post.post_id] = post.author;\n        });\n      }\n    }\n    setUser(user);\n  }\n\n  function userLikePost(id) {\n    if (user.hasOwnProperty(\"likedPosts\")) {\n      setUser((oldUser => ({\n        ...oldUser,\n        [oldUser.likedPosts]: {\n          ...oldUser.likedPosts, \n          [id]: oldUser.username + \":\" + oldUser.userId,\n        },\n      })));\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <header className=\"primary\">\n          <nav>\n            <span className=\"heading\"><Link className=\"nav-link\" to=\"/\">Ghostwriters</Link></span>\n\n            <ul className=\"nav-buttons links\">\n              <li><Link className=\"nav-link\" to=\"/\">Stories</Link></li>\n            </ul>\n          </nav>\n        </header>\n\n      <main className=\"primary\">\n        <Route exact path=\"/\" render={() => <Bookshelf loggedIn={loggedIn} user={user} login={login} userLikePost={userLikePost} />} />\n        <Route exact path=\"/story/:id\" render={() => <Story loggedIn={loggedIn} user={user} login={login} userLikePost={userLikePost} />} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}